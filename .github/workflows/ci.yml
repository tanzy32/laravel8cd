name: Laravel CI

on:
  push:
    branches:
      - main  # Adjust to your default branch
  pull_request:
    branches:
      - main  # Adjust to your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd='mysqladmin ping --silent' --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, bcmath, xml, curl, gd, xdebug
        coverage: xdebug

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-scripts --no-progress

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Set up .env
      run: |
        echo DB_CONNECTION=mysql >> .env
        echo DB_HOST=127.0.0.1 >> .env
        echo DB_PORT=3306 >> .env
        echo DB_DATABASE=laravel >> .env
        echo DB_USERNAME=root >> .env
        echo DB_PASSWORD=root >> .env

    - name: Generate Laravel application key
      run: php artisan key:generate

    - name: Wait for MySQL to be ready
      run: |
        while ! mysqladmin ping -h127.0.0.1 --silent; do
          echo "Waiting for MySQL..."
          sleep 1
        done

    - name: Run Laravel migrations
      run: php artisan migrate --force

    - name: Run Laravel tests
      run: php artisan test --log-junit tests/report.xml
      continue-on-error: true

    - name: Convert PHPUnit XML report to HTML
      run: xsltproc phpunit-to-html.xsl tests/report.xml > tests/report.html

    - name: Code coverage
      run: vendor/bin/phpunit --coverage-html 'reports/coverage'

    - name: Static code analysis (Larastan)
      run: vendor/bin/phpstan analyse --memory-limit=2G

    - name: Static code analysis (PHPCS)
      run: vendor/bin/phpcs

    - name: Build Docker image
      run: docker build -t scc11/laravel8cd .

    - name: Push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push scc11/laravel8cd
