# Start with the official Jenkins image as the base
FROM jenkins/jenkins:lts

# Switch to the root user to install dependencies
USER root

RUN apt-get update && apt-get install -y \
    lsb-release \
    apt-transport-https \
    ca-certificates \
    wget \
    software-properties-common \
    curl \
    git \
    unzip \
    sudo \
    xsltproc \
    && wget -q https://packages.sury.org/php/apt.gpg -O- | apt-key add - \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/php.list \
    && apt-get update && apt-get install -y \
    php7.4 \
    php7.4-cli \
    php7.4-fpm \
    php7.4-mysql \
    php7.4-zip \
    php7.4-gd \
    php7.4-mbstring \
    php7.4-xml \
    php7.4-curl \
    php7.4-xdebug \ 
    mariadb-client \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Docker
RUN curl -fsSL https://get.docker.com -o get-docker.sh \
    && sh get-docker.sh \
    && rm get-docker.sh \
    && usermod -aG docker jenkins

# Install Codeception globally using Composer
RUN composer global require "codeception/codeception"

# Configure Xdebug for code coverage directly in Dockerfile
RUN echo "zend_extension=xdebug.so" > /etc/php/7.4/cli/conf.d/20-xdebug.ini \
    && echo "xdebug.mode=coverage" >> /etc/php/7.4/cli/conf.d/20-xdebug.ini \
    && echo "xdebug.start_with_request=yes" >> /etc/php/7.4/cli/conf.d/20-xdebug.ini

# Copy the XSLT stylesheet into the Docker image
#COPY phpunit-to-html.xsl /var/www/html/

# Set Jenkins home environment variable
ENV JENKINS_HOME=/var/jenkins_home

# Manually install Jenkins plugins
RUN jenkins-plugin-cli --plugins git workflow-aggregator

# Switch back to the Jenkins user
USER jenkins

# Expose the necessary ports
EXPOSE 8080 50000

# Start Jenkins
CMD ["/usr/bin/tini", "--", "/usr/local/bin/jenkins.sh"]
